{"ast":null,"code":"var _jsxFileName = \"/Users/kiwii/ada/projects/front-end-inspiration-board/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Route } from 'react-router-dom';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; //Components\n\nimport Header from './components/Header';\nimport Boards from './components/Boards';\nimport Cards from './components/Cards';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    const getBoards = async () => {\n      const boardsFromServer = await fetchBoards();\n      setBoards(boardsFromServer);\n    };\n\n    getBoards();\n  }, []); // Fetch Boards\n\n  const fetchBoards = async () => {\n    const res = await fetch('https://inspo--board.herokuapp.com/boards');\n    const data = await res.json();\n    return data;\n  }; // Fetch Board\n\n\n  const fetchBoard = async id => {\n    const res = await fetch(`https://inspo--board.herokuapp.com/boards/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Boards, {\n      boards: boards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: boards.length > 0 ? /*#__PURE__*/_jsxDEV(Boards, {\n          boards: boards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this) : 'No Boards To Show'\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kiwii/ada/projects/front-end-inspiration-board/src/App.js"],"names":["useState","useEffect","BrowserRouter","Route","React","Header","Boards","Cards","Footer","App","boards","setBoards","getBoards","boardsFromServer","fetchBoards","res","fetch","data","json","fetchBoard","id","props","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAa,IAAKC,KAA3B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5B,YAAMC,gBAAgB,GAAG,MAAMC,WAAW,EAA1C;AACAH,MAAAA,SAAS,CAACE,gBAAD,CAAT;AACD,KAHD;;AAKAD,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT,CAHa,CAYb;;AACA,QAAME,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACD,GALD,CAba,CAoBb;;;AACA,QAAME,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,6CAA4CI,EAAG,EAAjD,CAAvB;AACA,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEP;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,GADT;AAEI,MAAA,KAAK,MAFT;AAGI,MAAA,MAAM,EAAGW,KAAD,iBACN;AAAA,kBACGX,MAAM,CAACY,MAAP,GAAgB,CAAhB,gBACC,QAAC,MAAD;AACE,UAAA,MAAM,EAAEZ;AADV;AAAA;AAAA;AAAA;AAAA,gBADD,GAKC;AANJ;AAJN;AAAA;AAAA;AAAA;AAAA,YAHF,eAkBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAnDQD,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter as  Route } from 'react-router-dom';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n//Components\nimport Header from './components/Header';\nimport Boards from './components/Boards';\nimport Cards from './components/Cards';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [boards, setBoards] = useState([])\n\n  useEffect(() => {\n    const getBoards = async () => {\n      const boardsFromServer = await fetchBoards()\n      setBoards(boardsFromServer)\n    }\n\n    getBoards()\n  }, [])\n\n  // Fetch Boards\n  const fetchBoards = async () => {\n    const res = await fetch('https://inspo--board.herokuapp.com/boards')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Board\n  const fetchBoard = async (id) => {\n    const res = await fetch(`https://inspo--board.herokuapp.com/boards/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Boards boards={boards} />\n      <Route\n          path='/'\n          exact\n          render={(props) => (\n            <>\n              {boards.length > 0 ? (\n                <Boards\n                  boards={boards}\n                />\n              ) : (\n                'No Boards To Show'\n              )}\n            </>\n          )}\n        />\n      <Cards />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}